/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "SFS/Component-preload",
	"modules": {
		"SFS/Component.js": "sap.ui.define([\r\n\t\"sap/ui/core/UIComponent\",\r\n\t\"sap/ui/Device\",\r\n\t\"SFS/model/models\",\r\n\t\"SFS/controller/ErrorHandler\"\r\n], function(UIComponent, Device, models, ErrorHandler) {\r\n\t\"use strict\";\r\n\r\n\treturn UIComponent.extend(\"SFS.Component\", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: \"json\"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * In this function, the FLP and device models are set and the router is initialized.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\t// call the base component's init function\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// initialize the error handler with the component\r\n\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t// set the FLP model\r\n\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t// create the views based on the url/hash\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t\t\r\n\t\t\t// used only for this lessons to show the request individually...\r\n\t\t\tthis.getModel().setUseBatch(false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is destroyed by UI5 automatically.\r\n\t\t * In this method, the ErrorHandler is destroyed.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tdestroy: function() {\r\n\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t// call the base component's destroy function\r\n\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t * @public\r\n\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t */\r\n\t\tgetContentDensityClass: function() {\r\n\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn this._sContentDensityClass;\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"SFS/view/Object.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:f=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:commons=\"sap.ui.commons\" xmlns:mc=\"sap.suite.ui.microchart\" xmlns:l=\"sap.ui.layout\" controllerName=\"SFS.controller.Object\">\n\t<semantic:FullscreenPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"true\" title=\"{i18n>objectTitle}\" busy=\"{objectView>/busy}\" busyIndicatorDelay=\"{objectView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{ path: 'ProductionOrder', formatter: '.formatter.ommitLeadingZero' } / {OperationStep}\" titleActive=\"false\" titlePress=\"onShowDetailPopover\" responsive=\"true\" icon=\"https://sapui5.hana.ondemand.com/sdk/test-resources/sap/ui/demokit/explored/img/HT-1114.jpg\" number=\"{ path: 'QuantityProduced', formatter: '.formatter.numberUnit' }\" numberUnit=\"{UnitOfMeasure}\">\n\t\t\t\t<statuses>\n\t\t\t\t\t<ObjectStatus class=\"sapUiSmallMarginBottom\" text=\"{parts:[{path: 'ProductionStarted'},{path:'InterruptStarted'}], formatter:'.formatter.operationStatusTextFormatter'}\" state=\"{parts:[{path: 'ProductionStarted'},{path:'InterruptStarted'}], formatter:'.formatter.operationStatusStateFormatter'}\" icon=\"{path: 'InterruptStarted', formatter:'.formatter.operationStatusIconFormatter'}\"/>\n\t\t\t\t</statuses>\n\t\t\t\t<attributes>\n\t\t\t\t\t<!--<ObjectIdentifier-->\n\t\t\t\t\t<!--\ttitle=\"{MaterialNumber}\"-->\n\t\t\t\t\t<!--\ttext=\"MaterialDescription\">-->\n\t\t\n\t\t\t\t\t<!--</ObjectIdentifier>-->\n\t\t\t\t\t<ObjectAttribute text=\"{MaterialNumber}\"/>\n\t\t\t\t\t<ObjectAttribute text=\"{MaterialDescription}\"/>\n\t\t\t\t</attributes>\n\t\t\t</ObjectHeader>\n\t\t\t<f:Form id=\"FormChange354\" editable=\"true\" backgroundDesign=\"Transparent\">\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanL=\"3\" labelSpanM=\"3\" labelSpanS=\"12\" emptySpanL=\"1\" emptySpanM=\"1\" emptySpanS=\"1\" columnsL=\"4\" columnsM=\"2\" breakpointL=\"800\" breakpointM=\"400\"/>\n\t\t\t\t</f:layout>\n\t\t\t\t<f:formContainers>\n\t\t\t\t\t<f:FormContainer id=\"idContainerOperationProduction\">\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<commons:Button id=\"idButtonStartProduction\" text=\"{i18n>buttonProductionTitle}\" width=\"200px\" icon=\"{= ${ProductionStarted} === true ? 'sap-icon://stop' : 'sap-icon://restart'}\" height=\"4rem\" styled=\"true\" lite=\"false\" style=\"{= ${ProductionStarted} === true ? 'Reject' : 'Accept'}\" press=\"onPressProductionStartStop\"/>\n\t\t\t\t\t\t\t\t\t<!--<Button id=\"idButtonStartProduction\" width=\"150px\" text=\"{i18n>buttonProductionTitle}\"-->\n\t\t\t\t\t\t\t\t\t<!--\ttype=\"{= ${ProductionStarted} === true ? 'Reject' : 'Accept'}\" press=\"onPressProductionStartStop\"-->\n\t\t\t\t\t\t\t\t\t<!--\ticon=\"{= ${ProductionStarted} === true ? 'sap-icon://stop' : 'sap-icon://restart'}\"/>-->\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t</f:formContainers>\n\t\t\t\t<f:formContainers>\n\t\t\t\t\t<f:FormContainer id=\"idContainerOperationInterrupt\">\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<commons:Button id=\"idButtonStartInterrupt\" text=\"{i18n>buttonInterruptionTitle}\" width=\"200px\" icon=\"{= ${InterruptStarted} === true ? 'sap-icon://stop' : 'sap-icon://restart'}\" height=\"4rem\" styled=\"true\" lite=\"false\" style=\"{= ${InterruptStarted} === true ? 'Reject' : 'Accept'}\" press=\"onPressProductionInterrupt\"/>\n\t\t\t\t\t\t\t\t\t<!--<Button id=\"idButtonStartInterrupt\" width=\"150px\" text=\"{i18n>buttonInterruptionTitle}\"-->\n\t\t\t\t\t\t\t\t\t<!--\ttype=\"{= ${InterruptStarted} === true ? 'Reject' : 'Accept'}\" press=\"onPressProductionInterrupt\"-->\n\t\t\t\t\t\t\t\t\t<!--\ticon=\"{= ${InterruptStarted} === true ? 'sap-icon://stop' : 'sap-icon://restart'}\"/>-->\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer id=\"idContainerOperationFinish\">\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<commons:Button id=\"idButtonFinish\" text=\"{i18n>buttonFinishTitle}\" width=\"200px\" height=\"4rem\" styled=\"true\" lite=\"false\" icon=\"sap-icon://complete\" style=\"Accept\" press=\"onPressOperationFinish\"/>\n\t\t\t\t\t\t\t\t\t<!--<Button id=\"idButtonFinish\" text=\"{i18n>buttonFinishTitle}\" width=\"150px\" type=\"Accept\" icon=\"sap-icon://complete\" enabled=\"true\"-->\n\t\t\t\t\t\t\t\t\t<!--\tpress=\"onPressOperationFinish\"/>-->\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer id=\"idContainerOperationInput\">\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<commons:Button id=\"idButtonStartInput\" text=\"{i18n>buttonInputTitle}\" width=\"200px\" height=\"4rem\" styled=\"true\" lite=\"false\" icon=\"sap-icon://number-sign\" style=\"Default\" press=\"onShowInputPopover\"/>\n\t\t\t\t\t\t\t\t\t<!--<Button id=\"idButtonStartInput\" text=\"{i18n>buttonInputTitle}\" width=\"150px\" type=\"Default\" enabled=\"true\" press=\"onShowInputPopover\"-->\n\t\t\t\t\t\t\t\t\t<!--\ticon=\"sap-icon://number-sign\"/>-->\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t</f:formContainers>\n\t\t\t</f:Form>\n\t\t\t<IconTabBar selectedKey=\"idTabComponents\" id=\"idTabBar\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter text=\"{i18n>tabCompTitle}\" id=\"idTabComponents\" icon=\"sap-icon://action-settings\" iconColor=\"Positive\" count=\"5\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<Table items=\"{ path:'Operation2Components'}\" mode=\"None\" inset=\"false\" updateFinished=\"onComponentsLoaded\" id=\"tableComponents\">\n\t\t\t\t\t\t\t\t<columns>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>colCompMaterialTitle}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>colCompMaterialDescrTitle}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t\t\t\t<Text text=\"{i18n>colCompQtyTitle}\"/>\n\t\t\t\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t\t\t</columns>\n\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t<ColumnListItem vAlign=\"Middle\" type=\"Inactive\">\n\t\t\t\t\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Matnr}\" wrapping=\"false\"/>\n\t\t\t\t\t\t\t\t\t\t\t<Text text=\"{Maktx}\" wrapping=\"false\"/>\n\t\t\t\t\t\t\t\t\t\t\t<ObjectNumber number=\"{Bdmng}\" unit=\"{Meins}\"/>\n\t\t\t\t\t\t\t\t\t\t</cells>\n\t\t\t\t\t\t\t\t\t</ColumnListItem>\n\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter text=\"{i18n>tabDrawingsTitle}\" count=\"1\" icon=\"sap-icon://task\" iconColor=\"Positive\" id=\"__filter1\">\n\t\t\t\t\t    <content>\n\t\t\t\t\t        <!--<Image width=\"140px\" height=\"140px\" id=\"__image0\"/>-->\n\t\t\t\t\t        <Image src=\"images/onderdeel.png\"/>\n\t\t\t\t\t    </content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t\n\t\t\t\t\t<IconTabFilter text=\"{i18n>tabProgressTitle}\" icon=\"sap-icon://shipping-status\" iconColor=\"Positive\" id=\"__filter2\">\n\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t<f:SimpleForm maxContainerCols=\"2\">\n\t\t\t\t\t\t\t\t<f:content>\n\t\t\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"{i18n>progress}\" level=\"H1\" titleStyle=\"H1\"/>\n\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t\t<FlexBox alignItems=\"Start\" justifyContent=\"Start\" direction=\"Column\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<Panel>\n\t\t\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<mc:RadialMicroChart fraction=\"{parts:[{path: 'QuantityProduced'}],formatter:'.formatter.progressQtyFormatter'}\" total=\"{parts:[{path: 'QuantityPlanned'}],formatter:'.formatter.progressQtyFormatter'}\" valueColor=\"{parts:[{path: 'QuantityProduced'},{path: 'QuantityPlanned'}],formatter:'.formatter.progressValueColorFormatter'}\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t\t\t\t\t<Title text=\"{i18n>performance}\" level=\"H1\" titleStyle=\"H1\"/>\n\t\t\t\t\t\t\t\t\t</Toolbar>\n\t\t\t\t\t\t\t\t\t<FlexBox alignItems=\"Start\" justifyContent=\"Start\">\n\t\t\t\t\t\t\t\t\t\t<items>\n\t\t\t\t\t\t\t\t\t\t\t<Panel>\n\t\t\t\t\t\t\t\t\t\t\t\t<content>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<mc:RadialMicroChart fraction=\"{parts:[{path: 'TimeActual'}],formatter:'.formatter.progressQtyFormatter'}\" total=\"{parts:[{path: 'TimePlanned'}],formatter:'.formatter.progressQtyFormatter'}\" valueColor=\"{parts:[{path: 'TimeActual'},{path: 'TimePlanned'}],formatter:'.formatter.progressValueColorFormatter'}\"/>\n\t\t\t\t\t\t\t\t\t\t\t\t</content>\n\t\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t</items>\n\t\t\t\t\t\t\t\t\t</FlexBox>\n\t\t\t\t\t\t\t\t</f:content>\n\t\t\t\t\t\t\t</f:SimpleForm>\n\t\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</semantic:content>\n\t\t<semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{objectView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"SFS/model/input.js": "sap.ui.define([],\r\n\tfunction() {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn {\r\n\t\t\tinputQty: function(sOrderId, sOperationId, fQty, oDataModel, oPopover) {\r\n\t\t\t\tvar fnOnError = function() {\r\n\t\t\t\t\t\talert(\"Niet gelukt\");\r\n\t\t\t\t\t\t//close the popover\t\t\r\n\t\t\t\t\t\toPopover.close();\r\n\t\t\t\t\t},\r\n\t\t\t\t\tfnOk = function() {\r\n\t\t\t\t\t\toDataModel.refresh();\r\n\t\t\t\t\t\t//close the popover\t\t\r\n\t\t\t\t\t\toPopover.close();\r\n\t\t\t\t\t\t//this.onNavBack();\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\toDataModel.callFunction(\"/Input\", {\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\turlParameters: {\r\n\t\t\t\t\t\tOperationStep: sOperationId,\r\n\t\t\t\t\t\tProductionOrder: sOrderId,\r\n\t\t\t\t\t\tQuantity: fQty,\r\n\t\t\t\t\t\tUnitOfMeasure: \"PCE\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsuccess: fnOk,\r\n\t\t\t\t\terror: fnOnError\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t});",
		"SFS/model/models.js": "sap.ui.define([\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/Device\"\r\n], function(JSONModel, Device) {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t},\r\n\r\n\t\tcreateFLPModel: function() {\r\n\t\t\tvar fnGetUser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\r\n\t\t\t\tbIsShareInJamActive = fnGetUser ? fnGetUser().isJamActive() : false,\r\n\t\t\t\toModel = new JSONModel({\r\n\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\r\n\t\t\t\t});\r\n\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\r\n\t};\r\n\r\n});",
		"SFS/model/formatter.js": "sap.ui.define([], function() {\r\n\t\"use strict\";\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Rounds the number unit value to 2 digits\r\n\t\t * @public\r\n\t\t * @param {string} sValue the number string to be rounded\r\n\t\t * @returns {string} sValue with 2 digits rounded\r\n\t\t */\r\n\t\tnumberUnit: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn \"\";\r\n\t\t\t}\r\n\t\t\treturn parseFloat(sValue).toFixed(2);\r\n\t\t},\r\n\r\n\t\toperationStatusTextFormatter: function(bIsSstarted, bIsInterrupted) {\r\n\t\t\tif (!bIsSstarted && !bIsInterrupted) {\r\n\t\t\t\treturn \"Stopped\";\r\n\t\t\t}\r\n\t\t\tif (bIsSstarted === true) {\r\n\t\t\t\treturn \"Started\";\r\n\t\t\t} else if (bIsInterrupted === true) {\r\n\t\t\t\treturn \"Interrupted\";\r\n\t\t\t} else {\r\n\t\t\t\treturn \"Stopped\";\r\n\t\t\t}\r\n\t\t},\r\n\t\toperationStatusStateFormatter: function(bIsSstarted, bIsInterrupted) {\r\n\t\t\tif (!bIsSstarted && !bIsInterrupted) {\r\n\t\t\t\treturn \"Warning\";\r\n\t\t\t}\r\n\t\t\tif (bIsSstarted === true) {\r\n\t\t\t\treturn \"Success\";\r\n\t\t\t} else if (bIsInterrupted === true) {\r\n\t\t\t\treturn \"Error\";\r\n\t\t\t} else {\r\n\t\t\t\treturn \"Warning\";\r\n\t\t\t}\r\n\t\t},\r\n\t\toperationStatusIconFormatter: function(bIsInterrupted) {\r\n\t\t\tif (!bIsInterrupted) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (bIsInterrupted === true) {\r\n\t\t\t\t// return \"sap-icon://error\";\r\n\t\t\t\treturn \"sap-icon://alert\";\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t},\r\n\t\tommitLeadingZero: function(sValue) {\r\n\t\t\tif (!sValue) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\treturn sValue.replace(/^0+/, '');\r\n\t\t},\r\n\t\tprogressQtyFormatter: function(quantity) {\r\n\t\t\t// Calculate the absolute difference beteen target and norm in hours\t\r\n\t\t\tif (quantity) {\r\n\t\t\t\treturn parseFloat(quantity);\r\n\t\t\t}\r\n\r\n\t\t\t// \t\t\tif (actual && planned) {\r\n\t\t\t// //\t\t\t\talert(actual);\r\n\t\t\t// \t\t\t\tvar actualFloat = parseFloat(actual, 2);\r\n\t\t\t// \t\t\t\tvar plannedFloat = parseFloat(planned, 2);\r\n\t\t\t// \t\t\t\tvar result = ( actualFloat / plannedFloat ) * 100;\r\n\t\t\t// \t\t\t\t//result = parseFloat(result,2);\r\n\t\t\t// \t\t\t\t//result = result.toFixed(2) ;\r\n\r\n\t\t\t// \t\t\tresult = Number((result).toFixed(2));\r\n\t\t\t// //\t\t\t\tresult = Math.abs(result);\r\n\t\t\t// alert(result);\r\n\t\t\t// \t\t\t\treturn Math.abs(result);\r\n\t\t\t// //\t\t\t\treturn result.toFixed(1);\r\n\t\t\t// \t\t\t} else {\r\n\t\t\t// \t\t\t\treturn null;\r\n\t\t\t// \t\t\t}\r\n\t\t},\r\n\t\tprogressValueColorFormatter: function(actual, target) {\r\n\t\t\t// Determine the progress value color\r\n\t\t\tif (actual && target) {\r\n\t\t\t\t//\t\t\t\talert(actual);\r\n\t\t\t\tvar actualFloat = parseFloat(actual, 2);\r\n\t\t\t\tvar targetFloat = parseFloat(target, 2);\r\n\t\t\t\tvar percentage = (actualFloat / targetFloat) * 100;\r\n\t\t\t\t//result = parseFloat(result,2);\r\n\t\t\t\t//result = result.toFixed(2) ;\r\n\t\t\t\tpercentage = Math.abs(Number((percentage).toFixed(2)));\r\n\t\t\t\tif (percentage > 75) {\r\n\t\t\t\t\treturn \"Good\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn \"Error\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});",
		"SFS/view/ResponsivePopoverInput.fragment.xml": "<core:FragmentDefinition xmlns=\"sap.m\" xmlns:l=\"sap.ui.layout\" xmlns:core=\"sap.ui.core\">\r\n\t<ResponsivePopover title=\"{i18n>inputTitle}\" class=\"sapUiPopupWithPadding\" placement=\"Bottom\">\r\n\t\t<beginButton>\r\n\t\t\t<Button text=\"OK\" press=\"handleInputOkButton\" />\r\n\t\t</beginButton>\r\n\t\t<endButton>\r\n\t\t\t<Button text=\"Cancel\" press=\"handleInputCancelButton\" />\r\n\t\t</endButton>\t\t\r\n\t\t<content>\r\n\t\t\t<l:VerticalLayout class=\"sapUiContentPadding\" width=\"100%\">\r\n\t\t\t\t<l:content>\r\n\t\t\t\t\t<Label text=\"{i18n>quantityInputText}\"/>\r\n\t\t\t\t\t<Input type=\"Number\" class=\"sapUiSmallMarginBottom\" placeholder=\"Enter a quantity ...\" value=\"{input>/quantity}\" submit=\"handleSubmitInput\"/>\r\n\t\t\t\t</l:content>\r\n\t\t\t</l:VerticalLayout>\r\n\t\t</content>\r\n\t</ResponsivePopover>\r\n</core:FragmentDefinition>",
		"SFS/controller/Object.controller.js": "/*global location*/\nsap.ui.define([\n\t\"SFS/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"sap/ui/core/routing/History\",\n\t\"SFS/model/formatter\",\n\t\"SFS/model/input\"\n], function(BaseController, JSONModel, History, formatter, input) {\n\t\"use strict\";\n\treturn BaseController.extend(\"SFS.controller.Object\", {\n\t\tformatter: formatter,\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Called when the worklist controller is instantiated.\n\t\t * @public\n\t\t */\n\t\tonInit: function() {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar iOriginalBusyDelay, oViewModel = new JSONModel({\n\t\t\t\tbusy: true,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\t// Store original busy indicator delay, so it can be restored later on\n\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\t\t\tthis.setModel(oViewModel, \"objectView\");\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function() {\n\t\t\t\t// Restore original busy indicator delay for the object view\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t}); // this.getView().byId(\"idTestBtn\").addStyleClass(\"circleButton\");\n\t\t\t// this.getView().byId(\"idTestBtn\").setHeight(\"200px\");\n\t\t},\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Event handler when the share in JAM button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"objectView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\toShareDialog.open();\n\t\t},\n\t\t/**\n\t\t * Event handler  for navigating back.\n\t\t * It checks if there is a history entry. If yes, history.go(-1) will happen.\n\t\t * If not, it will replace the current entry of the browser history with the worklist route.\n\t\t * @public\n\t\t */\n\t\tonNavBack: function() {\n\t\t\tvar oHistory = History.getInstance();\n\t\t\tvar sPreviousHash = oHistory.getPreviousHash();\n\t\t\tif (sPreviousHash !== undefined) {\n\t\t\t\t// The history contains a previous entry\n\t\t\t\thistory.go(-1);\n\t\t\t} else {\n\t\t\t\t// Otherwise we go backwards with a forward history\n\t\t\t\tvar bReplace = true;\n\t\t\t\tthis.getRouter().navTo(\"worklist\", {}, bReplace);\n\t\t\t}\n\t\t},\n\t\t/* =========================================================== */\n\t\t/* internal methods                                            */\n\t\t/* =========================================================== */\n\t\t/**\n\t\t * Binds the view to the object path.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar sPlant = oEvent.getParameter(\"arguments\").plant;\n\t\t\tvar sProductionOrder = oEvent.getParameter(\"arguments\").productionOrder;\n\t\t\tvar sOperationStep = oEvent.getParameter(\"arguments\").operationStep;\n\t\t\tvar sObjectPath = this.getModel().createKey(\"OperationSet\", {\n\t\t\t\tPlant: sPlant,\n\t\t\t\tProductionOrder: sProductionOrder,\n\t\t\t\tOperationStep: sOperationStep\n\t\t\t});\n\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t},\n\t\t/**\n\t\t * Binds the view to the object path.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\tvar oViewModel = this.getModel(\"objectView\"),\n\t\t\t\toDataModel = this.getModel();\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toDataModel.metadataLoaded().then(function() {\n\t\t\t\t\t\t\t// Busy indicator on view should only be set if metadata is loaded,\n\t\t\t\t\t\t\t// otherwise there may be two busy indications next to each other on the\n\t\t\t\t\t\t\t// screen. This happens because route matched handler already calls '_bindView'\n\t\t\t\t\t\t\t// while metadata is loaded.\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tonPressProductionStartStop: function(oEvent) {\n\t\t\t//\t\t\tvar oSource = oEvent.getSource();\n\t\t\t// Check the opartion should be started or should be stopped\n\t\t\t// Get current production status\n\t\t\tvar oView = this.getView();\n\t\t\tvar oObject = oView.getBindingContext().getObject();\n\t\t\tif (oObject.ProductionStarted === true) {\n\t\t\t\tvar method = \"StopProduction\";\n\t\t\t} else {\n\t\t\t\tmethod = \"StartProduction\";\n\t\t\t}\n\t\t\t//\t\t\t\tthis.getModel().setUseBatch(true);\n\t\t\tvar oDataModel = this.getModel();\n\t\t\tvar fnOnError = function(oResponse) {\n\t\t\t\t\t//\t\t\t\t\toView.getModel(\"appProperties\").setProperty(\"/busy\", false);\n\t\t\t\t\t//messages.showErrorMessage(oResponse, oResourceBundle.getText(\"xtit.errorTitle\"));\n\t\t\t\t\talert(\"Niet geluktt\");\n\t\t\t\t},\n\t\t\t\tfnOk = function(oData, oResponse) {\n\t\t\t\t\t//alert(\"Hiep Hiep\");\n\t\t\t\t\t//oDataModel.setData(oData.results);\n\t\t\t\t\toDataModel.refresh();\n\t\t\t\t\tthis.onNavBack(); // oView.getModel(\"appProperties\").setProperty(\"/busy\", false);\n\t\t\t\t\t// if (fnSuccess) {\n\t\t\t\t\t// \tfnSuccess();\n\t\t\t\t\t// }\n\t\t\t\t\t// var sSuccessMessage = \"\";\n\t\t\t\t\t// if (aPOIds.length === 1) {\n\t\t\t\t\t// \tvar sSupplier = oModel.getProperty(\"/PurchaseOrders('\" + aPOIds[0] + \"')\").SupplierName;\n\t\t\t\t\t// \tsSuccessMessage = oResourceBundle.getText(bApprove ? \"ymsg.approvalMessageToast\" : \"ymsg.rejectionMessageToast\", [sSupplier]);\n\t\t\t\t\t// } else {\n\t\t\t\t\t// \tsSuccessMessage = oResourceBundle.getText(bApprove ? \"ymsg.massApprovalMessageToast\" : \"ymsg.massRejectionMessageToast\");\n\t\t\t\t\t// }\n\t\t\t\t\t// MessageToast.show(sSuccessMessage);\n\t\t\t\t}.bind(this);\n\t\t\toDataModel.callFunction(\"/\" + method, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\turlParameters: {\n\t\t\t\t\tOperationStep: oObject.OperationStep,\n\t\t\t\t\tProductionOrder: oObject.ProductionOrder\n\t\t\t\t},\n\t\t\t\tsuccess: fnOk,\n\t\t\t\terror: fnOnError\n\t\t\t});\n\t\t},\n\t\tonPressProductionInterrupt: function(oEvent) {\n\t\t\tvar oView = this.getView();\n\t\t\tvar oObject = oView.getBindingContext().getObject();\n\t\t\tif (oObject.InterruptStarted === true) {\n\t\t\t\tvar method = \"StopInterrupt\";\n\t\t\t} else {\n\t\t\t\tmethod = \"StartInterrupt\";\n\t\t\t}\n\t\t\t//\t\t\t\n\t\t\tvar oDataModel = this.getModel();\n\t\t\tvar fnOnError = function(oResponse) {\n\t\t\t\t\t//\t\t\t\t\toView.getModel(\"appProperties\").setProperty(\"/busy\", false);\n\t\t\t\t\t//messages.showErrorMessage(oResponse, oResourceBundle.getText(\"xtit.errorTitle\"));\n\t\t\t\t\talert(\"Niet gelukt\");\n\t\t\t\t},\n\t\t\t\tfnOk = function() {\n\t\t\t\t\t//alert(\"Hiep Hiep\");\n\t\t\t\t\toDataModel.refresh();\n\t\t\t\t\tthis.onNavBack();\n\t\t\t\t}.bind(this);\n\t\t\toDataModel.callFunction(\"/\" + method, {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\turlParameters: {\n\t\t\t\t\tOperationStep: oObject.OperationStep,\n\t\t\t\t\tProductionOrder: oObject.ProductionOrder\n\t\t\t\t},\n\t\t\t\tsuccess: fnOk,\n\t\t\t\terror: fnOnError\n\t\t\t});\n\t\t},\n\t\tonPressOperationFinish: function(oEvent) {\n\t\t\tvar oView = this.getView();\n\t\t\tvar oObject = oView.getBindingContext().getObject();\n\t\t\tvar oDataModel = this.getModel();\n\t\t\tvar fnOnError = function(oResponse) {\n\t\t\t\t\talert(\"Niet gelukt\");\n\t\t\t\t},\n\t\t\t\tfnOk = function() {\n\t\t\t\t\toDataModel.refresh();\n\t\t\t\t\tthis.onNavBack();\n\t\t\t\t}.bind(this);\n\t\t\toDataModel.callFunction(\"/Finish\", {\n\t\t\t\tmethod: \"GET\",\n\t\t\t\turlParameters: {\n\t\t\t\t\tOperationStep: oObject.OperationStep,\n\t\t\t\t\tProductionOrder: oObject.ProductionOrder\n\t\t\t\t},\n\t\t\t\tsuccess: fnOk,\n\t\t\t\terror: fnOnError\n\t\t\t});\n\t\t},\n\t\tonShowInputPopover: function(oEvent) {\n\t\t\tvar oPopover = this._getPopover();\n\t\t\tvar oSource = oEvent.getSource();\n\t\t\t// connect dialog to view (models, lifecycle)\n\t\t\tthis.getView().addDependent(oPopover);\n\t\t\tvar oInputModel = new sap.ui.model.json.JSONModel();\n\t\t\toPopover.setModel(oInputModel, \"input\");\n\t\t\t// open dialog\n\t\t\toPopover.openBy(oSource);\n\t\t},\n\t\thandleInputCancelButton: function(oEvent) {\n\t\t\t// Close the dialog\t\n\t\t\tvar oPopover = this._getPopover();\n\t\t\tif (oPopover) {\n\t\t\t\toPopover.close();\n\t\t\t\tthis.oPopver = null;\n\t\t\t}\n\t\t},\n\t\thandleSubmitInput: function() {\n\t\t\tthis.handleInputOkButton();\n\t\t},\n\t\thandleInputOkButton: function(oEvent) {\n\t\t\t// process input and close the popup\n\t\t\tvar oPopover = this._getPopover();\n\t\t\tif (!oPopover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar oInputModel = oPopover.getModel(\"input\");\n\t\t\tvar qty = oInputModel.getProperty(\"/quantity\");\n\t\t\t// Process the input data\n\t\t\tvar oDataModel = this.getModel();\n\t\t\tvar oView = this.getView();\n\t\t\tvar oObject = oView.getBindingContext().getObject();\n\t\t\t// this.onPressProductionStartStop();\n\t\t\t// return;\n\t\t\tinput.inputQty(oObject.ProductionOrder, oObject.OperationStep, qty, oDataModel, oPopover); // var fnOnError = function() {\n\t\t\tif (oPopover) {\n\t\t\t\toPopover.close();\n\t\t\t\tthis.oPopver = null;\n\t\t\t}\n\t\t},\n\t\t_getPopover: function() {\n\t\t\t// create dialog lazily\n\n\t\t\tif (!this._oPopover) {\n\t\t\t\t// create popover via fragment factory\n\t\t\t\tthis._oPopover = sap.ui.xmlfragment(\"SFS.view.ResponsivePopoverInput\", this);\n\t\t\t}\n\t\t\treturn this._oPopover;\n\t\t},\n\t\t_onBindingChange: function(oEvent) {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toViewModel = this.getModel(\"objectView\"),\n\t\t\t\toElementBinding = oView.getElementBinding();\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"objectNotFound\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar oResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getBindingContext().getObject(),\n\t\t\t\tsObjectId = oObject.ProductionOrder,\n\t\t\t\tsObjectName = oObject.ProductionOrder;\n\t\t\t// Everything went fine.\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"saveAsTileTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\", oResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\", oResourceBundle.getText(\"shareSendEmailObjectMessage\", [\n\t\t\t\tsObjectName,\n\t\t\t\tsObjectId,\n\t\t\t\tlocation.href\n\t\t\t]));\n\t\t},\n\t\t/**\n\t\t *@memberOf SFS.controller.Object\n\t\t */\n\t\tonComponentsLoaded: function() {\n\t\t\t//This code was generated by the layout editor.\n\t\t\tvar itemCount = this.getView().byId(\"tableComponents\").getItems().length;\n\t\t\tthis.byId(\"idTabComponents\").setCount(itemCount);\n\n\t\t}\n\t});\n});",
		"SFS/view/Worklist.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\"\n\txmlns:core=\"sap.ui.core\" xmlns:form=\"sap.ui.layout.form\" controllerName=\"SFS.controller.Worklist\">\n\t<semantic:FullscreenPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"true\" title=\"{i18n>worklistViewTitle}\">\n\t\t<semantic:content>\n\t\t\t<Table id=\"table\" width=\"auto\" class=\"sapUiResponsiveMargin\"\n\t\t\t\titems=\"{ path: '/OperationSet', sorter: { path: 'ProductionOrder', descending: false } }\" noDataText=\"{worklistView>/tableNoDataText}\"\n\t\t\t\tbusyIndicatorDelay=\"{worklistView>/tableBusyDelay}\" growing=\"true\" growingScrollToLoad=\"true\" updateFinished=\"onUpdateFinished\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Title id=\"tableHeader\" text=\"{worklistView>/worklistTableTitle}\"/>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t\t<SearchField id=\"searchField\" tooltip=\"{i18n>worklistSearchTooltip}\" search=\"onSearch\" width=\"auto\" showRefreshButton=\"true\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column id=\"orderColumn\">\n\t\t\t\t\t\t<Text text=\"{i18n>orderColumnTitle}\" id=\"orderColumnTitle\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<!--<Column id=\"opertationColumn\">-->\n\t\t\t\t\t<!--\t<Text text=\"{i18n>operationColumnTitle}\" id=\"operationColumnTitle\"/>-->\n\t\t\t\t\t<!--</Column>-->\n\t\t\t\t\t<Column id=\"materialColumn\" width=\"300px\">\n\t\t\t\t\t\t<Text text=\"{i18n>materialColumnTitle}\" id=\"materialColumnTitle\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column id=\"statusColumn\">\n\t\t\t\t\t\t<Text text=\"{i18n>statusColumnTitle}\" id=\"statusColumnTitle\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column id=\"plannedColumn\">\n\t\t\t\t\t\t<!--<Text text=\"{i18n>plannedColumnTitle}\" id=\"plannedColumnTitle\"/>-->\n\t\t\t\t\t\t<Text text=\"{i18n>producedPlannedColumnTitle}\" id=\"producedPlannedColumnTitle\" maxLines=\"2\" wrapping=\"true\" minLines=\"2\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column id=\"producedColumn\">\n\t\t\t\t\t\t<!--<Text text=\"{i18n>producedColumnTitle}\" id=\"producedColumnTitle\"/>-->\n\t\t\t\t\t\t<Text text=\"{i18n>actualPlannedColumnTitle}\" id=\"actualPlannedColumnTitle\" maxLines=\"2\" wrapping=\"true\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column id=\"Action\" width=\"auto\"/>\n\t\t\t\t\t<Column id=\"Input\" width=\"auto\"/>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem type=\"Navigation\" press=\"onPress\">\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<ObjectIdentifier title=\"{ path: 'ProductionOrder', formatter: '.formatter.ommitLeadingZero' }\" text=\"{OperationStep}\"/>\n\t\t\t\t\t\t\t<!--<Text text=\"{OperationStep}\"/>-->\n\t\t\t\t\t\t\t<ObjectIdentifier title=\"{MaterialDescription}\" text=\"{MaterialNumber}\"/>\n\t\t\t\t\t\t\t<ObjectStatus class=\"sapUiSmallMarginBottom\"\n\t\t\t\t\t\t\t\ttext=\"{parts:[{path: 'ProductionStarted'},{path:'InterruptStarted'}], formatter:'.formatter.operationStatusTextFormatter'}\"\n\t\t\t\t\t\t\t\tstate=\"{parts:[{path: 'ProductionStarted'},{path:'InterruptStarted'}], formatter:'.formatter.operationStatusStateFormatter'}\"\n\t\t\t\t\t\t\t\ticon=\"{path: 'InterruptStarted', formatter:'.formatter.operationStatusIconFormatter'}\"/>\n\t\t\t\t\t\t\t<ObjectIdentifier title=\"{ path: 'QuantityProduced', formatter: '.formatter.numberUnit' } {UnitOfMeasure}\"\n\t\t\t\t\t\t\t\ttext=\"{ path: 'QuantityPlanned', formatter: '.formatter.numberUnit' } {UnitOfMeasure}\"/>\n\t\t\t\t\t\t\t<!--<ObjectNumber number=\"{ path: 'QuantityPlanned', formatter: '.formatter.numberUnit' }\" unit=\"{UnitOfMeasure}\"/>-->\n\t\t\t\t\t\t\t<!--<ObjectNumber number=\"{ path: 'QuantityProduced', formatter: '.formatter.numberUnit' }\" unit=\"{UnitOfMeasure}\"/>-->\n\t\t\t\t\t\t\t<ObjectIdentifier title=\"{ path: 'TimeActual', formatter: '.formatter.numberUnit' } {TimeUnit}\"\n\t\t\t\t\t\t\t\ttext=\"{ path: 'TimePlanned', formatter: '.formatter.numberUnit' } {TimeUnit}\"/>\n\t\t\t\t\t\t\t<Button id=\"Default\" text=\"{i18n>buttonProductionTitle}\" \n\t\t\t\t\t\t\t\t\t\ticon=\"{= ${ProductionStarted} === true ? 'sap-icon://stop' : 'sap-icon://restart'}\" \n\t\t\t\t\t\t\t\t\t\ttype=\"{= ${ProductionStarted} === true ? 'Reject' : 'Accept'}\" press=\"onPressProductionStartStop\"/>\n\t\t\t\t\t\t\t<Button id=\"inputButton\" icon=\"sap-icon://add-process\" press=\"onShowInputPopover\" tooltip=\"Iput\"/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t\t<form:SimpleForm id=\"idFormSelections\" width=\"700px\" editable=\"true\" visible=\"true\" layout=\"ResponsiveGridLayout\"\n\t\t\t\tclass=\"sapUiMediumMarginBegin\" backgroundDesign=\"Transparent\" labelSpanL=\"2\">\n\t\t\t\t<form:content>\n\t\t\t\t\t<Label text=\"{i18n>workcenterLabelTitle}\" id=\"idWorkCenterLabel\"/>\n\t\t\t\t\t<Select forceSelection=\"true\" id=\"idSelectWorkCenter\" items=\"{ path: '/WorkcenterSet' }\" width=\"150px\" change=\"onWorkcenterChanged\">\n\t\t\t\t\t\t<core:Item key=\"{WorkcenterId}\" text=\"{WorkcenterDescription}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Label text=\"{i18n>employeeLabelTitle}\" id=\"idEmployeeLabel\"/>\n\t\t\t\t\t<Select forceSelection=\"true\" id=\"idSelectEmployee\" items=\"{ path: '/EmployeeSet' }\" width=\"150px\">\n\t\t\t\t\t\t<core:Item key=\"{Id}\" text=\"{Name}\"/>\n\t\t\t\t\t</Select>\n\t\t\t\t</form:content>\n\t\t\t\t<form:title/>\n\t\t\t</form:SimpleForm>\n\t\t</semantic:content>\n\t\t<semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{worklistView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\t</semantic:FullscreenPage>\n</mvc:View>",
		"SFS/view/App.view.xml": "<mvc:View xmlns:mvc=\"sap.ui.core.mvc\" controllerName=\"SFS.controller.App\" displayBlock=\"true\" xmlns=\"sap.m\">\r\n\t<App id=\"app\" busy=\"{appView>/busy}\" busyIndicatorDelay=\"{appView>/delay}\"/>\r\n</mvc:View>",
		"SFS/view/NotFound.view.xml": "<mvc:View controllerName=\"SFS.controller.NotFound\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage title=\"{i18n>notFoundTitle}\" text=\"{i18n>notFoundText}\" icon=\"{sap-icon://document}\" id=\"page\" description=\"\">\r\n\t\t<customDescription>\r\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\"/>\r\n\t\t</customDescription>\r\n\t</MessagePage>\r\n</mvc:View>",
		"SFS/view/ObjectNotFound.view.xml": "<mvc:View controllerName=\"SFS.controller.NotFound\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\">\r\n\t<MessagePage title=\"{i18n>objectTitle}\" text=\"{i18n>noObjectFoundText}\" icon=\"{sap-icon://product}\" description=\"\" id=\"page\">\r\n\t\t<customDescription>\r\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\"/>\r\n\t\t</customDescription>\r\n\t</MessagePage>\r\n</mvc:View>",
		"SFS/controller/App.controller.js": "sap.ui.define([\r\n\t\"SFS/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\"\r\n], function(BaseController, JSONModel) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"SFS.controller.App\", {\r\n\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tbusy: true,\r\n\t\t\t\tdelay: 0\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t};\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().\r\n\t\t\tthen(fnSetAppNotBusy);\r\n\r\n\t\t\t// apply content density mode to root view\r\n\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t}\r\n\t});\r\n\r\n});",
		"SFS/controller/Worklist.controller.js": "sap.ui.define([\r\n\t\"SFS/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"SFS/model/formatter\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"SFS/model/input\"\r\n], function(BaseController, JSONModel, formatter, Filter, FilterOperator, input) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"SFS.controller.Worklist\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the worklist controller is instantiated.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\tvar oViewModel,\r\n\t\t\t\tiOriginalBusyDelay,\r\n\t\t\t\toTable = this.byId(\"table\");\r\n\r\n\t\t\t// Put down worklist table's original value for busy indicator delay,\r\n\t\t\t// so it can be restored later on. Busy handling on the table is\r\n\t\t\t// taken care of by the table itself.\r\n\t\t\tiOriginalBusyDelay = oTable.getBusyIndicatorDelay();\r\n\t\t\tthis._oTable = oTable;\r\n\t\t\t// keeps the search state\r\n\t\t\tthis._oTableSearchState = [];\r\n\r\n\t\t\t// Model used to manipulate control states\r\n\t\t\toViewModel = new JSONModel({\r\n\t\t\t\tworklistTableTitle: this.getResourceBundle().getText(\"worklistTableTitle\"),\r\n\t\t\t\tsaveAsTileTitle: this.getResourceBundle().getText(\"worklistViewTitle\"),\r\n\t\t\t\tshareOnJamTitle: this.getResourceBundle().getText(\"worklistViewTitle\"),\r\n\t\t\t\tshareSendEmailSubject: this.getResourceBundle().getText(\"shareSendEmailWorklistSubject\"),\r\n\t\t\t\tshareSendEmailMessage: this.getResourceBundle().getText(\"shareSendEmailWorklistMessage\", [location.href]),\r\n\t\t\t\ttableNoDataText: this.getResourceBundle().getText(\"tableNoDataText\"),\r\n\t\t\t\ttableBusyDelay: 0\r\n\t\t\t});\r\n\t\t\tthis.setModel(oViewModel, \"worklistView\");\r\n\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\toTable.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for worklist's table\r\n\t\t\t\toViewModel.setProperty(\"/tableBusyDelay\", iOriginalBusyDelay);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\t\t/**\r\n\t\t * Triggered by the table's 'updateFinished' event: after new table\r\n\t\t * data is available, this handler method updates the table counter.\r\n\t\t * This should only happen if the update was successful, which is\r\n\t\t * why this handler is attached to 'updateFinished' and not to the\r\n\t\t * table's list binding's 'dataReceived' method.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public s\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the worklist's object counter after the table update\r\n\t\t\tvar sTitle,\r\n\t\t\t\toTable = oEvent.getSource(),\r\n\t\t\t\tiTotalItems = oEvent.getParameter(\"total\");\r\n\t\t\t// only update the counter if the length is final and\r\n\t\t\t// the table is not empty\r\n\t\t\tif (iTotalItems && oTable.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"worklistTableTitleCount\", [iTotalItems]);\r\n\t\t\t} else {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"worklistTableTitle\");\r\n\t\t\t}\r\n\t\t\tthis.getModel(\"worklistView\").setProperty(\"/worklistTableTitle\", sTitle);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler when a table item gets pressed\r\n\t\t * @param {sap.ui.base.Event} oEvent the table selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonPress: function(oEvent) {\r\n\t\t\t// The source is the list item that got pressed\r\n\t\t\tthis._showObject(oEvent.getSource());\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Navigates back in the browser history, if the entry was created by this app.\r\n\t\t * If not, it navigates to the Fiori Launchpad home page.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar oHistory = sap.ui.core.routing.History.getInstance(),\r\n\t\t\t\tsPreviousHash = oHistory.getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t// The history contains a previous entry\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\t// Navigate back to FLP home\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share in JAM button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareInJamPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"worklistView\"),\r\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\tobject: {\r\n\t\t\t\t\t\t\tid: location.href,\r\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\toShareDialog.open();\r\n\t\t},\r\n\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t} else {\r\n\t\t\t\tvar oTableSearchState = [];\r\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\t\tif (sQuery && sQuery.length > 0) {\r\n\t\t\t\t\tvar filter = new Filter(\"SearchField\", sap.ui.model.FilterOperator.Contains, sQuery);\r\n\t\t\t\t\toTableSearchState.push(filter);\r\n\t\t\t\t\t// oTableSearchState = [new Filter(\"SearchField\", FilterOperator.Contains, sQuery)];\r\n\t\t\t\t}\r\n\t\t\t\tthis._applySearch(oTableSearchState);\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tonShowInputPopover: function(oEvent) {\r\n\t\t\tvar oPopover = this._getPopover();\r\n\t\t\tvar oSource = oEvent.getSource();\r\n\t\t\t// connect dialog to view (models, lifecycle)\r\n\t\t\tthis.getView().addDependent(oPopover);\r\n\t\t\tvar oInputModel = new sap.ui.model.json.JSONModel();\r\n\t\t\toPopover.setModel(oInputModel, \"input\");\r\n\t\t\toPopover.bindElement(oSource.getBindingContext().getPath());\r\n\r\n\t\t\t// open dialog\r\n\t\t\toPopover.openBy(oSource);\r\n\t\t},\r\n\r\n\t\thandleInputCancelButton: function(oEvent) {\r\n\t\t\t// Close the dialog\t\r\n\r\n\t\t\tvar oPopover = this._getPopover();\r\n\t\t\tif (oPopover) {\r\n\t\t\t\toPopover.close();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\thandleSubmitInput: function() {\r\n\t\t\tthis.handleInputOkButton();\r\n\t\t},\r\n\r\n\t\thandleInputOkButton: function(oEvent) {\r\n\t\t\t// process input and close the popup\r\n\t\t\tvar oPopover = this._getPopover();\r\n\t\t\tif (!oPopover) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar oInputModel = oPopover.getModel(\"input\");\r\n\t\t\tvar qty = oInputModel.getProperty(\"/quantity\");\r\n\r\n\t\t\t// Process the input data\r\n\t\t\tvar oDataModel = this.getModel();\r\n\t\t\toPopover = this._getPopover();\r\n\t\t\t//\t\t\t\t\tvar oObject = oEvent.getSource().getBindingContext().getObject();\r\n\t\t\tvar oObject = oPopover.getBindingContext().getObject();\r\n\t\t\tinput.inputQty(oObject.ProductionOrder, oObject.OperationStep, qty, oDataModel, oPopover);\r\n\t\t},\r\n\r\n\t\tonPressProductionStartStop: function(oEvent) {\r\n\t\t\t// Get current production status\r\n\t\t\tvar oSource = oEvent.getSource();\r\n\t\t\tvar oObject = oSource.getBindingContext().getObject();\r\n\t\t\tif (oObject.ProductionStarted === true) {\r\n\t\t\t\tvar method = \"StopProduction\";\r\n\t\t\t} else {\r\n\t\t\t\tmethod = \"StartProduction\";\r\n\t\t\t}\r\n\t\t\t//\t\t\t\tthis.getModel().setUseBatch(true);\r\n\t\t\tvar oDataModel = this.getModel();\r\n\r\n\t\t\tvar fnOnError = function(oResponse) {\r\n\t\t\t\t\talert(\"Niet geluktt\");\r\n\t\t\t\t},\r\n\t\t\t\tfnOk = function(oData, oResponse) {\r\n\t\t\t\t\toDataModel.refresh();\r\n\t\t\t\t}.bind(this);\r\n\r\n\t\t\toDataModel.callFunction(\"/\" + method, {\r\n\t\t\t\tmethod: \"GET\",\r\n\t\t\t\turlParameters: {\r\n\t\t\t\t\tOperationStep: oObject.OperationStep,\r\n\t\t\t\t\tProductionOrder: oObject.ProductionOrder\r\n\t\t\t\t},\r\n\t\t\t\tsuccess: fnOk,\r\n\t\t\t\terror: fnOnError\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_getPopover: function() {\r\n\t\t\t// create dialog lazily\r\n\t\t\tif (!this._oPopover) {\r\n\t\t\t\t// create popover via fragment factory\r\n\t\t\t\tthis._oPopover = sap.ui.xmlfragment(\r\n\t\t\t\t\t\"SFS.view.ResponsivePopoverInput\", this);\r\n\t\t\t}\r\n\t\t\treturn this._oPopover;\r\n\t\t},\r\n\r\n\t\tonWorkcenterChanged: function(oEvent) {\r\n\t\t\t// Bind the selceted month to vizframe\r\n\t\t\tvar workCenterId = oEvent.getParameter(\"selectedItem\").getProperty(\"key\");\r\n\t\t\tvar oFilter = new sap.ui.model.Filter(\"WorkcenterId\", \"EQ\", workCenterId);\r\n\t\t\tvar oTable = this.byId(\"table\"),\r\n\t\t\t\toBinding = oTable.getBinding(\"items\");\r\n\t\t\tif (oFilter) {\r\n\t\t\t\toBinding.filter(oFilter);\r\n\t\t\t} else {\r\n\t\t\t\toBinding.filter([]);\r\n\t\t\t}\r\n\r\n\t\t\t//\t\t\tvar sPath = oEvent.getParameter(\"selectedItem\").getBindingContext().getPath();\r\n\t\t\t// var oVizFrame = this.getView().byId(\"idVizFrameMonth\");\r\n\t\t\t// oVizFrame.bindElement(sPath);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oTable.getBinding(\"items\").refresh();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* internal methods                                            */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the object page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showObject: function(oItem) {\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\tplant: oItem.getBindingContext().getProperty(\"Plant\"),\r\n\t\t\t\tproductionOrder: oItem.getBindingContext().getProperty(\"ProductionOrder\"),\r\n\t\t\t\toperationStep: oItem.getBindingContext().getProperty(\"OperationStep\")\r\n\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applySearch: function(oTableSearchState) {\r\n\t\t\tvar oViewModel = this.getModel(\"worklistView\");\r\n\t\t\tthis._oTable.getBinding(\"items\").filter(oTableSearchState, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (oTableSearchState.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/tableNoDataText\", this.getResourceBundle().getText(\"worklistNoDataWithSearchText\"));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n});",
		"SFS/controller/BaseController.js": "sap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\"\r\n], function(Controller) {\r\n\t\"use strict\";\r\n\r\n\treturn Controller.extend(\"SFS.controller.BaseController\", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function() {\r\n\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name.\r\n\t\t * @public\r\n\t\t * @param {string} [sName] the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function(sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function(oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Getter for the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function() {\r\n\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareEmailPress: function() {\r\n\t\t\tvar oViewModel = (this.getModel(\"objectView\") || this.getModel(\"worklistView\"));\r\n\t\t\tsap.m.URLHelper.triggerEmail(\r\n\t\t\t\tnull,\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"SFS/controller/NotFound.controller.js": "sap.ui.define([\r\n\t\"SFS/controller/BaseController\"\r\n], function(BaseController) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"SFS.controller.NotFound\", {\r\n\r\n\t\t/**\r\n\t\t * Navigates to the worklist when the link is pressed\r\n\t\t * @public\r\n\t\t */\r\n\t\tonLinkPressed: function() {\r\n\t\t\tthis.getRouter().navTo(\"worklist\");\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"SFS/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\"sap/ui/base/Object\",\r\n\t\"sap/m/MessageBox\"\r\n], function(Object, MessageBox) {\r\n\t\"use strict\";\r\n\r\n\treturn Object.extend(\"SFS.controller.ErrorHandler\", {\r\n\r\n\t\t/**\r\n\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t * @class\r\n\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t * @public\r\n\t\t * @alias SFS.controller.ErrorHandler\r\n\t\t */\r\n\t\tconstructor: function(oComponent) {\r\n\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\tthis._oComponent = oComponent;\r\n\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\tthis._bMessageOpen = false;\r\n\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\tthis._oModel.attachMetadataFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\tthis._showMetadataError(oParams.response);\r\n\t\t\t}, this);\r\n\r\n\t\t\tthis._oModel.attachRequestFailed(function(oEvent) {\r\n\t\t\t\tvar oParams = oEvent.getParameters();\r\n\r\n\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\r\n\t\t\t\t\t\t\"Cannot POST\") === 0)) {\r\n\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when the metadata call has failed.\r\n\t\t * The user can try to refresh the metadata.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showMetadataError: function(sDetails) {\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"metadataErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.RETRY, MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function(sAction) {\r\n\t\t\t\t\t\tif (sAction === MessageBox.Action.RETRY) {\r\n\t\t\t\t\t\t\tthis._oModel.refreshMetadata();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t * Only the first error message will be display.\r\n\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showServiceError: function(sDetails) {\r\n\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bMessageOpen = true;\r\n\t\t\tMessageBox.error(\r\n\t\t\t\tthis._sErrorText, {\r\n\t\t\t\t\tid: \"serviceErrorMessageBox\",\r\n\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\tonClose: function() {\r\n\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t});\r\n});",
		"SFS/localService/mockserver.js": "sap.ui.define([\r\n\t\"sap/ui/core/util/MockServer\"\r\n], function(MockServer) {\r\n\t\"use strict\";\r\n\tvar oMockServer,\r\n\t\t_sAppModulePath = \"SFS/\",\r\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\treturn {\r\n\r\n\t\t/**\r\n\t\t * Initializes the mock server.\r\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t * @public\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\tsEntity = \"OperationSet\",\r\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\toMockServer = new MockServer({\r\n\t\t\t\trootUri: sMockServerUrl\r\n\t\t\t});\r\n\r\n\t\t\t// configure mock server with a delay of 1s\r\n\t\t\tMockServer.config({\r\n\t\t\t\tautoRespond: true,\r\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t});\r\n\r\n\t\t\t// load local mock data\r\n\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\r\n\t\t\t\tbGenerateMissingMockData: true\r\n\t\t\t});\r\n\r\n\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\taRequest.response = function(oXhr) {\r\n\t\t\t\t\t\toXhr.respond(iErrCode, {\r\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\r\n\t\t\t\t\t\t}, sMessage);\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\r\n\t\t\t// handling the metadata error test\r\n\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Handling request errors\r\n\t\t\tif (sErrorParam) {\r\n\t\t\t\taRequests.forEach(function(aEntry) {\r\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\toMockServer.start();\r\n\r\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t */\r\n\t\tgetMockServer: function() {\r\n\t\t\treturn oMockServer;\r\n\t\t}\r\n\t};\r\n\r\n});"
	}
});